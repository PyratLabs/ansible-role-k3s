---

name: CI
'on':
  pull_request:
  push:
    branches:
      - master
      - main
      - v1_release
  schedule:
    - cron: "0 1 1 * *"

defaults:
  run:
    working-directory: "xanmanning.k3s"

env:
  UV_SYSTEM_PYTHON: "1"

jobs:
  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          path: "xanmanning.k3s"

      - name: Set up uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install test dependencies
        run: uv pip install -r molecule/lint-requirements.txt

      - name: Run yamllint
        run: yamllint -s .

      - name: Run ansible-lint
        run: ansible-lint --exclude molecule/ --exclude meta/

  molecule:
    name: Molecule
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: geerlingguy/docker-debian12-ansible:latest
            scenario: nodeploy
            prebuilt: 'true'
          - distro: geerlingguy/docker-debian11-ansible:latest
            scenario: default
            prebuilt: 'true'
          - distro: geerlingguy/docker-ubuntu2404-ansible:latest
            scenario: default
            prebuilt: 'true'
          - distro: geerlingguy/docker-ubuntu2204-ansible:latest
            scenario: default
            prebuilt: 'true'
          - distro: geerlingguy/docker-fedora42-ansible:latest
            scenario: highavailabilitydb
            prebuilt: 'true'
          - distro: geerlingguy/docker-fedora41-ansible:latest
            scenario: autodeploy
          - distro: geerlingguy/docker-rockylinux10-ansible:latest
            scenario: nodeploy
            prebuilt: 'true'
          - distro: geerlingguy/docker-rockylinux9-ansible:latest
            scenario: highavailabilityetcd
            prebuilt: 'true'

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          path: "xanmanning.k3s"

      - name: Set up uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install test dependencies
        run: uv pip install -r molecule/requirements.txt

      - name: Run Molecule tests
        run: molecule test --scenario-name "${{ matrix.scenario }}"
        # continue-on-error: true
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
          MOLECULE_PREBUILT: ${{ matrix.prebuilt }}
          MOLECULE_DOCKER_COMMAND: ${{ matrix.command }}
